//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Eletronics.WEB.SupplierService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SupplierService.ISupplierService")]
    public interface ISupplierService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/AddSupplier", ReplyAction="http://tempuri.org/ISupplierService/AddSupplierResponse")]
        void AddSupplier(Eletronicos.Model.Supplier supplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/AddSupplier", ReplyAction="http://tempuri.org/ISupplierService/AddSupplierResponse")]
        System.Threading.Tasks.Task AddSupplierAsync(Eletronicos.Model.Supplier supplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/RemoveSupplier", ReplyAction="http://tempuri.org/ISupplierService/RemoveSupplierResponse")]
        void RemoveSupplier(Eletronicos.Model.Supplier supplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/RemoveSupplier", ReplyAction="http://tempuri.org/ISupplierService/RemoveSupplierResponse")]
        System.Threading.Tasks.Task RemoveSupplierAsync(Eletronicos.Model.Supplier supplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/UpdateSupplier", ReplyAction="http://tempuri.org/ISupplierService/UpdateSupplierResponse")]
        void UpdateSupplier(Eletronicos.Model.Supplier supplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/UpdateSupplier", ReplyAction="http://tempuri.org/ISupplierService/UpdateSupplierResponse")]
        System.Threading.Tasks.Task UpdateSupplierAsync(Eletronicos.Model.Supplier supplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/FindAllSuppliers", ReplyAction="http://tempuri.org/ISupplierService/FindAllSuppliersResponse")]
        Eletronicos.Model.Supplier[] FindAllSuppliers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/FindAllSuppliers", ReplyAction="http://tempuri.org/ISupplierService/FindAllSuppliersResponse")]
        System.Threading.Tasks.Task<Eletronicos.Model.Supplier[]> FindAllSuppliersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/FindSupplier", ReplyAction="http://tempuri.org/ISupplierService/FindSupplierResponse")]
        Eletronicos.Model.Supplier FindSupplier(Eletronicos.Model.Supplier supplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/FindSupplier", ReplyAction="http://tempuri.org/ISupplierService/FindSupplierResponse")]
        System.Threading.Tasks.Task<Eletronicos.Model.Supplier> FindSupplierAsync(Eletronicos.Model.Supplier supplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/FindAllSupplierTypes", ReplyAction="http://tempuri.org/ISupplierService/FindAllSupplierTypesResponse")]
        Eletronicos.Model.SupplierType[] FindAllSupplierTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/FindAllSupplierTypes", ReplyAction="http://tempuri.org/ISupplierService/FindAllSupplierTypesResponse")]
        System.Threading.Tasks.Task<Eletronicos.Model.SupplierType[]> FindAllSupplierTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/FindSupplierDescription", ReplyAction="http://tempuri.org/ISupplierService/FindSupplierDescriptionResponse")]
        Eletronicos.Model.SupplierType FindSupplierDescription(int supplierTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/FindSupplierDescription", ReplyAction="http://tempuri.org/ISupplierService/FindSupplierDescriptionResponse")]
        System.Threading.Tasks.Task<Eletronicos.Model.SupplierType> FindSupplierDescriptionAsync(int supplierTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/FindSuppliersByFilter", ReplyAction="http://tempuri.org/ISupplierService/FindSuppliersByFilterResponse")]
        Eletronicos.Model.Supplier[] FindSuppliersByFilter(Eletronicos.Model.Supplier supplierFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/FindSuppliersByFilter", ReplyAction="http://tempuri.org/ISupplierService/FindSuppliersByFilterResponse")]
        System.Threading.Tasks.Task<Eletronicos.Model.Supplier[]> FindSuppliersByFilterAsync(Eletronicos.Model.Supplier supplierFilter);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISupplierServiceChannel : Eletronics.WEB.SupplierService.ISupplierService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SupplierServiceClient : System.ServiceModel.ClientBase<Eletronics.WEB.SupplierService.ISupplierService>, Eletronics.WEB.SupplierService.ISupplierService {
        
        public SupplierServiceClient() {
        }
        
        public SupplierServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SupplierServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SupplierServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SupplierServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddSupplier(Eletronicos.Model.Supplier supplier) {
            base.Channel.AddSupplier(supplier);
        }
        
        public System.Threading.Tasks.Task AddSupplierAsync(Eletronicos.Model.Supplier supplier) {
            return base.Channel.AddSupplierAsync(supplier);
        }
        
        public void RemoveSupplier(Eletronicos.Model.Supplier supplier) {
            base.Channel.RemoveSupplier(supplier);
        }
        
        public System.Threading.Tasks.Task RemoveSupplierAsync(Eletronicos.Model.Supplier supplier) {
            return base.Channel.RemoveSupplierAsync(supplier);
        }
        
        public void UpdateSupplier(Eletronicos.Model.Supplier supplier) {
            base.Channel.UpdateSupplier(supplier);
        }
        
        public System.Threading.Tasks.Task UpdateSupplierAsync(Eletronicos.Model.Supplier supplier) {
            return base.Channel.UpdateSupplierAsync(supplier);
        }
        
        public Eletronicos.Model.Supplier[] FindAllSuppliers() {
            return base.Channel.FindAllSuppliers();
        }
        
        public System.Threading.Tasks.Task<Eletronicos.Model.Supplier[]> FindAllSuppliersAsync() {
            return base.Channel.FindAllSuppliersAsync();
        }
        
        public Eletronicos.Model.Supplier FindSupplier(Eletronicos.Model.Supplier supplier) {
            return base.Channel.FindSupplier(supplier);
        }
        
        public System.Threading.Tasks.Task<Eletronicos.Model.Supplier> FindSupplierAsync(Eletronicos.Model.Supplier supplier) {
            return base.Channel.FindSupplierAsync(supplier);
        }
        
        public Eletronicos.Model.SupplierType[] FindAllSupplierTypes() {
            return base.Channel.FindAllSupplierTypes();
        }
        
        public System.Threading.Tasks.Task<Eletronicos.Model.SupplierType[]> FindAllSupplierTypesAsync() {
            return base.Channel.FindAllSupplierTypesAsync();
        }
        
        public Eletronicos.Model.SupplierType FindSupplierDescription(int supplierTypeID) {
            return base.Channel.FindSupplierDescription(supplierTypeID);
        }
        
        public System.Threading.Tasks.Task<Eletronicos.Model.SupplierType> FindSupplierDescriptionAsync(int supplierTypeID) {
            return base.Channel.FindSupplierDescriptionAsync(supplierTypeID);
        }
        
        public Eletronicos.Model.Supplier[] FindSuppliersByFilter(Eletronicos.Model.Supplier supplierFilter) {
            return base.Channel.FindSuppliersByFilter(supplierFilter);
        }
        
        public System.Threading.Tasks.Task<Eletronicos.Model.Supplier[]> FindSuppliersByFilterAsync(Eletronicos.Model.Supplier supplierFilter) {
            return base.Channel.FindSuppliersByFilterAsync(supplierFilter);
        }
    }
}
