using System;
using SupplierService.Business;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.ServiceModel;
using System.ServiceModel.Web;
using System.Text;
using Eletronicos.Model;

namespace SupplierService
{
    /// <summary>
    /// a class that represents a web service and is a wrapper for SupplierBO class methods
    /// </summary>
    public class SupplierService : ISupplierService
    {
        /// <summary>
        /// a property that makes the necessary validation for Supplier Type information, and is wrapper for SupplierTypeDAO class methods
        /// </summary>
        private SupplierTypeBO supplierTypeBO = new SupplierTypeBO();

        /// <summary>
        /// a property that makes the necessary validation for Supplier information, and is wrapper for SupplierDAO class methods
        /// </summary>
        private SupplierBO supplierBO = new SupplierBO();

        /// <summary>
        /// Calls The SupplierBO add method to validate and if everything is ok, insert the client in the database
        /// </summary>
        /// <param name="supplier">a model of the supplier that gonna be inserted in the database</param>
        public void AddSupplier(Eletronicos.Model.Supplier supplier)
        {
            this.supplierBO.Add(supplier);
        }

        /// <summary>
        /// Calls The SupplierBO Remove method to remove a  supplier in the database
        /// </summary>
        /// <param name="supplier">a model of the supplier that will be removed from the database</param>
        public void RemoveSupplier(Eletronicos.Model.Supplier supplier)
        {
            this.supplierBO.Remove(supplier);
        }

        /// <summary>
        /// Calls The SupplierBO Update to validate and if everything is ok, update the supplier register in the database
        /// </summary>
        /// <param name="supplier">represents a supplier model to be updated in the database</param>
        public void UpdateSupplier(Eletronicos.Model.Supplier supplier)
        {
            this.supplierBO.Update(supplier);
        }

        /// <summary>
        /// Calls SupplierBO to return all Registers of the supplier table in the database
        /// </summary>
        /// <returns> A List object where all data is stored</returns>
        public IList<Eletronicos.Model.Supplier> FindAllSuppliers()
        {
            return this.supplierBO.FindAll();
        }

        /// <summary>
        /// Calls the SupplierBO to return the wanted supplier
        /// </summary>
        /// <param name="supplier">A supplier containing the primary key to be used in the search</param>
        /// <returns>a Register that corresponds to the primary key passed in the parameter object</returns>
        public Eletronicos.Model.Supplier FindSupplier(Eletronicos.Model.Supplier supplier)
        {
            return this.supplierBO.Find(supplier);
        }

        /// <summary>
        /// calls the SupplierTypeBO to return all Registers of the SupplierType table from the database
        /// </summary>
        /// <returns> A List object where all data is stored</returns>
        public IList<Eletronicos.Model.SupplierType> FindAllSupplierTypes()
        {
            return this.supplierTypeBO.FindAll();
        }

        /// <summary>
        /// Calls the SupplierTypeBO to return the wanted SupplierType Description
        /// </summary>
        /// <param name="supplierTypeID">the SupplierType containing primary key to be used in the search</param>
        /// <returns>a Register that corresponds to the primary key passed in the parameter</returns>
        public Eletronicos.Model.SupplierType FindSupplierDescription(int supplierTypeID)
        {
            return new SupplierType() { SupplierTypeDescription = this.supplierTypeBO.FindDescription(supplierTypeID) };
        }
    }
}
