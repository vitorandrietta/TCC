using System.Collections.Generic;
using ClientService.Business;
using Eletronicos.Model;

namespace ClientService
{
    /// <summary>
    /// a class that represents a web service and is a wrapper for ClientBO class methods
    /// </summary>
    public class ClientService : IClientService
    {
        /// <summary>
        /// a property that makes the necessary validation for client information, and is wrapper for ClientDAO class methods
        /// </summary>
        private ClientBO clientBO = new ClientBO();

        /// <summary>
        ///  a property that makes the necessary validation for client type information, and is wrapper for ClientTypeDAO class methods
        /// </summary>
        private ClientTypeBO clientTypeBO = new ClientTypeBO();

        /// <summary>
        /// Calls The ClientBO add method to validate and if everything is ok, insert the client in the database
        /// </summary>
        /// <param name="client">a model of the client that gonna be inserted in the database</param>
        public void AddClient(Eletronicos.Model.Client client)
        {
            this.clientBO.Add(client);
        }

        /// <summary>
        /// Calls The ClientBO Remove method to remove a client in the database
        /// </summary>
        /// <param name="client">a model of the client that will be removed from the database</param>
        public void RemoveClient(Eletronicos.Model.Client client)
        {
            this.clientBO.Remove(client);
        }

        /// <summary>
        /// Calls The ClientBO Update to validate and if everything is ok, update the client register in the database
        /// </summary>
        /// <param name="client">represents a client model to be updated in the database</param>
        public void UpdateClient(Eletronicos.Model.Client client)
        {
            this.clientBO.Update(client);
        }

        /// <summary>
        /// Calls ClientBO to return all Registers of the Client table in the database
        /// </summary>
        /// <returns> A List object where all data is stored</returns>
        public IList<Eletronicos.Model.Client> FindAll()
        {
            return this.clientBO.FindAll();
        }

        /// <summary>
        /// Calls the ClientBO to return the wanted Client
        /// </summary>
        /// <param name="client">A client containing the primary key to be used in the search</param>
        /// <returns>a Register that corresponds to the primary key passed in the parameter object</returns>
        public Eletronicos.Model.Client Find(Eletronicos.Model.Client client)
        {
            return this.clientBO.Find(client);
        }

        /// <summary>
        /// calls the ClientTypeBO to return all Registers of the ClientType table from the database
        /// </summary>
        /// <returns> A List object where all data is stored</returns>
        public IList<Eletronicos.Model.ClientType> FindAllClientTypes()
        {
            return this.clientTypeBO.FindAll();
        }

        /// <summary>
        /// Calls the ClientTypeBO to return the wanted ClientType Description
        /// </summary>
        /// <param name="clientType">the clientType containing primary key to be used in the search</param>
        /// <returns>a Register that corresponds to the primary key passed in the parameter</returns>
        public ClientType FindDescription(ClientType clientType)
        {
            return new ClientType() { ClientTypeDescription = this.clientTypeBO.FindDescription(clientType.ClientTypeID) };
        }
    }
}
